@model BookingHotels.Web.Models.RoomViewModel
@{
    ViewBag.Title = "Edit room";
    // Images Srcs from Web API
    var imgSrcs = ViewBag.imgSrcs;
    // ErrorMessage from temp data
    var ErrorMessage = ViewBag.ErrorMessage;
}

<h2>@ViewBag.Title</h2>
<hr/>
@* Details about room being edited *@
<div class="row">
    <div class="col-md-5">
        <div class="row">
            <h2>You are editing this room:</h2>
        </div>
        <div class="row">
            @Html.ActionLink(
            linkText: "Id: " + Model.Id,
            actionName: "Details",
            controllerName: "Room",
            routeValues: new
            {
                id = Model.Id,
            },
            htmlAttributes: null)
        </div>
        <div class="row">
            RoomType: @Model.RoomType
        </div>
        <div class="row">
            @Html.ActionLink(
            linkText: "Hotel: "+Model.HotelId.ToString(),
            actionName: "Details",
            controllerName: "Hotel",
            routeValues: new
            {
                id = Model.HotelId,
            },
            htmlAttributes: null)
        </div>
    </div>
    <div class="col-md-7">
        <div class="row">
            <h2>Images for this room:</h2>
        </div>
        <div class="row">
        @{ if (imgSrcs!=null)
            {
                foreach (string imgsrc in imgSrcs)
                {
                    <img src="@imgsrc" width="50" height="50" />
                }
            }
        }
        </div>
    </div>
</div>
<hr />
@* Upload image *@
<div class="row text-center">
</div>
<div class="row text-center">
    @using (Html.BeginForm("UploadRoomImage", "Room", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(model => model.Id);
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <h3>Upload an image for this room:</h3>
        <div class="col-md-8">
            <div class="row-fluid">
                <span class="btn btn-file">
                    Select or drag and drop
                    <input type="file"
                           class="imageFileInput"
                           data-bind="file: {data: fileInput, name: fileName, reader: someReader}"
                           id="RoomImage"
                           name="uploadedFile" />
                 </span>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="row glyphicon-align-left">Preview:
            </div>
            <div class="row">
                <img  data-bind="attr: { src: fileInput }"  width="100" height="100" />
                <a href="#" data-bind="click: clearValue" id="remove"> X</a>
            </div>
            <div class="row">
                <p data-bind="text: fileName"></p>
            </div>
        </div>
        <div class="col-md-12">
            <input type="submit" value="Upload" class="btn btn-default" />
        </div>
    }
</div>
<div style="white-space: pre-line" data-bind="text: fileInput"></div>
<div class="row text-center">
    <p class="text-danger">@ErrorMessage</p>
</div>

@* Knocout ViewModel *@
<script type="text/javascript">
    var viewModel = {
      fileInput: ko.observable(),
      fileName: ko.observable(),
      someReader: new FileReader(),
      clearValue: function () {
          $('#RoomImage').val('');
          this.fileInput(null);
          $("#prevImg").attr("src", "~/Content/Images/room.png");
          this.fileName(null);
      }
    }
    ko.applyBindings(viewModel)
</script>








