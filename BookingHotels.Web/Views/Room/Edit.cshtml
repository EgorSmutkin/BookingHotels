@model BookingHotels.Web.Models.RoomViewModel
@{
    ViewBag.Title = "Edit room";
    // Images Srcs from Web API
    var imgSrcs = ViewBag.imgSrcs;
    // ErrorMessage from temp data
    var ErrorMessage = ViewBag.ErrorMessage;
}

<h2>@ViewBag.Title</h2>
<hr/>
@* Details about room being edited *@
<div class="row">
    <div class="col-md-5">
        <div class="row">
            <h2>You are editing this room:</h2>
        </div>
        <div class="row">
            @Html.ActionLink(
linkText: "Id: " + Model.Id,
actionName: "Details",
controllerName: "Room",
routeValues: new
{
    id = Model.Id,
},
htmlAttributes: null)
        </div>
        <div class="row">
            RoomType: @Model.RoomType
        </div>
        <div class="row">
            @Html.ActionLink(
linkText: "Hotel: " + Model.HotelId.ToString(),
actionName: "Details",
controllerName: "Hotel",
routeValues: new
{
    id = Model.HotelId,
},
htmlAttributes: null)
        </div>
    </div>
    <div class="col-md-7">
        <div class="row">
            <h2>Images for this room:</h2>
        </div>
        <div class="row">
        @{ if (imgSrcs != null)
            {
                foreach (string imgsrc in imgSrcs)
                {
                    <img src="@imgsrc" width="50" height="50" />
                }
            }
        }
        </div>
    </div>
</div>
<hr />

<div >
    Drop files here
    @*<input type="file" id="browse" name="files[]" multiple />*@
    @Html.TextBoxFor(m => m.Images, new { type = "file", multiple = "multiple", value = "", id = "browse", name = "files" })
</div>
@*Form*@
@using (Html.BeginForm("UploadRoomImage", "Room", null, FormMethod.Post, new { id = "uploadForm", enctype = "multipart/form-data" }))
{
<div class="row text-center"><h4>Upload an image for this room:</h4></div>
<div class="row">
        @Html.HiddenFor(model => model.Id)
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-7">
            <div class="row">
                @* Upload image *@

                    <br>

                <div id="container"></div>

                    @*<input type="file" id="filesToSend" name="uploadedFiles[]"  multiple/>*@
                    @*Select or drag and drop:
                    <input type="file"
                           class="btn btn-default imageFileInput"
                           id="RoomImage"
                           multiple
                           name="uploadedFile" />*@
            </div>
        </div>
        <div class="col-md-5">
            <div class="row">
                Preview:
            </div>
            <div class="row">
                <output id="listNames"></output>
            </div>
            <div class="row">
                <output id="listImages"></output>
            </div>
            <div class="row">
                <a href="#" id="remove">clear</a>

            </div>
        </div>
</div>
<br>
<div class="row">
    <div class="col-md-12">
        <input type="submit" id="submitBtn" value="Upload" class="btn btn-default" />
    </div>
</div>
}
<div class="row text-center">
    <p class="text-danger">@ErrorMessage</p>
</div>

<script type="text/javascript">
    $(document).ready(function () {
    // Prevent multiple submits when clicking submit button twice
        $("#uploadForm").submit(function () {
            $("#submitBtn").attr("disabled", true);
            return true;
        });
    });
    var queue = [];

    //// Create hidden inputs
    $(':file').change(function () {
        if (this.files.length > 0) {
            var real = $(this);
            var cloned = real.clone(true);
            real.hide();
            cloned.insertAfter(real);
            real.appendTo('form');
        }

        event.stopPropagation();
        event.preventDefault();
        // files is a FileList of File objects
        var dataTransfer = event.dataTransfer;
        var target = event.target;
        if (dataTransfer != null)
            var files = dataTransfer.files;
        else
            var files = target.files;
        for (var i = 0, f; f = files[i]; i++) {

            //// Create hidden inputs
            //var container = document.getElementById('container');
            //var input = document.createElement("input");
            //input.type = "hidden";
            //input.id = "input" + i;
            //input.name = "uploadedFiles["+i+"]";
            //input.value = f.name;
            ////$('#input' + i).val(f);
            //container.appendChild(input);
            //console.log(input);



            // Only process image files.

            if (!f.type.match('image.*')) {
                continue;
            }
            var reader = new FileReader();
            // Closure to capture the file information.
            reader.fileName = f.name;
            reader.fileSize = f.size;
            reader.addEventListener("load", function (event) {
                var theFile = event.target;
                var spanImage = document.createElement('span');
                spanImage.innerHTML = ['<img class="thumb" src="', theFile.result,
                                        '" title="', escape(theFile.name), '"/>'].join('');
                document.getElementById('listImages').insertBefore(spanImage, null);
                // Write image info
                var spanInfo = document.createElement('span');
                spanInfo.innerHTML = '<p>' + escape(theFile.fileName) + ' - ' + theFile.fileSize + ' bytes</p>';
                document.getElementById('listImages').insertBefore(spanInfo, null);
                console.log('read image# ' + i);
                queue.push(theFile.result);
                //console.log(theFile.result);
                //var val = document.getElementsByName("uploadedFiles[]")[0].getAttribute("value");
                //document.getElementsByName("uploadedFiles[]")[0].setAttribute("value", val+theFile.result);



                console.log('pushed to queue ' + theFile.fileName);

            });
            reader.readAsDataURL(f);
        }
        console.log(queue);

        //$('<input>').attr({
        //    type: 'file',
        //    id: 'filesToSend',
        //    name: 'uploadedFiles[]',
        //    value: queue[0]
        //}).appendTo('uploadForm');
        //$('#filesToSend').val(queue);



    });

    $('#remove').click(function () {
        clearValues()
    });
    //function handleFileSelect(event) {
    //    event.stopPropagation();
    //    event.preventDefault();
    //    // files is a FileList of File objects
    //    var dataTransfer = event.dataTransfer;
    //    var target = event.target;
    //    if (dataTransfer != null)
    //        var files = dataTransfer.files;
    //    else
    //        var files = target.files;
    //    for (var i = 0, f; f = files[i]; i++) {
            
    //        //// Create hidden inputs
    //        //var container = document.getElementById('container');
    //        //var input = document.createElement("input");
    //        //input.type = "hidden";
    //        //input.id = "input" + i;
    //        //input.name = "uploadedFiles["+i+"]";
    //        //input.value = f.name;
    //        ////$('#input' + i).val(f);
    //        //container.appendChild(input);
    //        //console.log(input);



    //        // Only process image files.

    //        if (!f.type.match('image.*')) {
    //            continue;
    //        }
    //        var reader = new FileReader();
    //        // Closure to capture the file information.
    //        reader.fileName = f.name;
    //        reader.fileSize = f.size;
    //        reader.addEventListener("load", function (event) {
    //            var theFile = event.target;
    //            var spanImage = document.createElement('span');
    //            spanImage.innerHTML = ['<img class="thumb" src="', theFile.result,
    //                                    '" title="', escape(theFile.name), '"/>'].join('');
    //            document.getElementById('listImages').insertBefore(spanImage, null);
    //            // Write image info
    //            var spanInfo = document.createElement('span');
    //            spanInfo.innerHTML = '<p>' + escape(theFile.fileName) + ' - ' + theFile.fileSize + ' bytes</p>';
    //            document.getElementById('listImages').insertBefore(spanInfo, null);
    //            console.log('read image# '+i);
    //            queue.push(theFile.result);
    //            //console.log(theFile.result);
    //            //var val = document.getElementsByName("uploadedFiles[]")[0].getAttribute("value");
    //            //document.getElementsByName("uploadedFiles[]")[0].setAttribute("value", val+theFile.result);



    //            console.log('pushed to queue ' + theFile.fileName);

    //        });
    //        reader.readAsDataURL(f);
    //    }
    //    console.log(queue);

    //    //$('<input>').attr({
    //    //    type: 'file',
    //    //    id: 'filesToSend',
    //    //    name: 'uploadedFiles[]',
    //    //    value: queue[0]
    //    //}).appendTo('uploadForm');
    //    //$('#filesToSend').val(queue);
    //}

    //function handleDragOver(evt) {
    //    evt.stopPropagation();
    //    evt.preventDefault();
    //    evt.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.
    //}
    //document.getElementById('browse').addEventListener('dragover', handleFileSelect, false);
    //document.getElementById('browse').addEventListener('change', handleFileSelect, false);
    //document.getElementById('browse').addEventListener('drop', handleFileSelect, false);

    //// Setup the dnd listeners.
    //var dropZone = document.getElementById('drop_zone');
    //dropZone.addEventListener('dragover', handleDragOver, false);
    //dropZone.addEventListener('change', handleFileSelect, false);
    //dropZone.addEventListener('drop', handleFileSelect, false);
</script>








