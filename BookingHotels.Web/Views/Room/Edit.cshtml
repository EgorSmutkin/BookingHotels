@model BookingHotels.Web.Models.RoomViewModel
@{
    ViewBag.Title = "Edit room";
    // Images Srcs from Web API
    var imgSrcs = ViewBag.imgSrcs;
    // ErrorMessage from temp data
    var ErrorMessage = ViewBag.ErrorMessage;
}

<h2>@ViewBag.Title</h2>
<hr/>
@* Details about room being edited *@
<div class="row">
    <div class="col-md-5">
        <div class="row">
            <h2>You are editing this room:</h2>
        </div>
        <div class="row">
            @Html.ActionLink(
            linkText: "Id: " + Model.Id,
            actionName: "Details",
            controllerName: "Room",
            routeValues: new
            {
                id = Model.Id,
            },
            htmlAttributes: null)
        </div>
        <div class="row">
            RoomType: @Model.RoomType
        </div>
        <div class="row">
            @Html.ActionLink(
            linkText: "Hotel: "+Model.HotelId.ToString(),
            actionName: "Details",
            controllerName: "Hotel",
            routeValues: new
            {
                id = Model.HotelId,
            },
            htmlAttributes: null)
        </div>
    </div>
    <div class="col-md-7">
        <div class="row">
            <h2>Images for this room:</h2>
        </div>
        <div class="row">
        @{ if (imgSrcs!=null)
            {
                foreach (string imgsrc in imgSrcs)
                {
                    <img src="@imgsrc" width="50" height="50" />
                }
            }
        }
        </div>
    </div>
</div>
<hr />
@* Upload image *@
<div class="row text-center">
</div>
<div class="row text-center">
    @using (Html.BeginForm("UploadRoomImage", "Room", null, FormMethod.Post, new { id= "uploadForm", enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(model => model.Id);
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <h3>Upload an image for this room:</h3>
        <div class="col-md-8">
            <div class="row-fluid">
                <span>
                    Select or drag and drop:
                    <input type="file"
                           class="btn btn-default imageFileInput"
                           id="RoomImage"
                           multiple
                           name="uploadedFile" />
                 </span>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="row glyphicon-align-left">Preview:
            </div>
            <div class="row">
                <img  width="100" height="100" />
                <span id="output"></span>
                <a href="#" onClick="clearValues()"  id="remove"> X</a>
            </div>
            <div class="row">
                <p></p>
            </div>
        </div>
        <div class="col-md-12">
            <input type="submit" id="submitBtn" value="Upload" class="btn btn-default" />
        </div>
    }
</div>
<div style="white-space: pre-line" data-bind="text: fileInput"></div>
<div class="row text-center">
    <p class="text-danger">@ErrorMessage</p>
</div>

<div id="drop_zone">Drop files here</div>
<output id="list"></output>

<script type="text/javascript">
    $(document).ready(function () {
    // Prevent multiple submits when clicking submit button twice
        $("#uploadForm").submit(function () {
            $("#submitBtn").attr("disabled", true);
            return true;
        });
    });

    function handleFileSelect(evt) {
        evt.stopPropagation();
        evt.preventDefault();

        var files = evt.dataTransfer.files; // FileList object.

        // files is a FileList of File objects. List some properties.
        var output = [];
        for (var i = 0, f; f = files[i]; i++) {
            output.push('<li><strong>', escape(f.name), '</strong> (', f.type || 'n/a', ') - ',
                        f.size, ' bytes, last modified: ',
                        f.lastModifiedDate ? f.lastModifiedDate.toLocaleDateString() : 'n/a',
                        '</li>');
        }
        document.getElementById('list').innerHTML = '<ul>' + output.join('') + '</ul>';
    }

    function handleDragOver(evt) {
        evt.stopPropagation();
        evt.preventDefault();
        evt.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.
    }

    // Setup the dnd listeners.
    var dropZone = document.getElementById('drop_zone');
    dropZone.addEventListener('dragover', handleDragOver, false);
    dropZone.addEventListener('drop', handleFileSelect, false);


</script>








