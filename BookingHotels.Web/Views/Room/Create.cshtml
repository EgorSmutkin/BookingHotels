@model BookingHotels.Web.Models.RoomViewModel

@{
    ViewBag.Title = "Create a new Room";
    <h2>@ViewBag.Title</h2>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @* Dropdown list *@
        <div class="form-group">
            @Html.LabelFor(model => model.HotelId, "Hotel", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var hotels = ViewBag.hotels;
                }
                @Html.DropDownListFor(m => m.HotelId, hotels as SelectList, "Select where new room will be", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HotelId, "", new { @class = "text-danger" })
            </div>
        </div>
        @* Price *@
        <div class="form-group">
            @Html.LabelFor(model => model.RoomPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoomPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoomPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        @* Room Type *@
        <div class="form-group">
            @Html.LabelFor(model => model.RoomType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.RoomType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RoomType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
