@model BookingHotels.Web.Models.FeedbackViewModel
@{
    ViewBag.Title = "Feedback";
    string hotelName = ViewBag.HotelName;
    string hotelId = ViewBag.HotelId;
}
<h2>
Write a feedback for @Html.ActionLink(
                    linkText: hotelName,
                    actionName: "Details",
                    controllerName: "Hotel",
                    routeValues: new { id = hotelId },
                    htmlAttributes: null)
: </h2>
<hr/>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.HiddenFor(model => model.HotelId)
        @Html.HiddenFor(model => model.ApplicationUserId)
        @* FeedbackStars *@
        <div class="form-group">
            @Html.LabelFor(model => model.FeedbackStars, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EnumDropDownListFor(model => model.FeedbackStars, "Rate this hotel", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FeedbackStars, "", new { @class = "text-danger" })
            </div>
        </div>
        @* Feedback  Text *@
        <div class="form-group">
            @Html.LabelFor(model => model.FeedbackText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.FeedbackText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FeedbackText, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Send feedback" class="btn btn-default" />
            </div>
        </div>
        <p class="text-danger">@ViewBag.ErrorMessage</p>
    </div>
}




